Variables do not stay after your program is done. Files can help save data
after your program is finished. A file is just a large string.

# File Paths and File Extensions
  Show Tree structure of a folder hierarchy
  What is the Root Folder?
  How are USB Drives seen differently in Windows and Linux?
    Windows show entirely different root folders
    Linux + OSX attach the drive to another folder in root

# Backslash on Windows and Forward Slash on OSX and Linux
  Windows paths are written with backslashes (\)
  OSX and Linux uses forward slashes (/)
  To make python work on all OS-es, you need to handle both cases
  os.path.join() does this easily with the correct path seperator

  >> import os
  >> path = os.path.join('usr', 'bin', 'spam')
  'usr\\bin\\spam' # on windoge
  'usr/bin/spam    # on best OS

  You need double back slashes because you need to use an escape character smh

# Current Working Directory (directory is another name for folder)

  >> import os
  >> os.getcwd()
  'C:\\Python34'
  >> os.chdir('C:\\Windows\\System32')
  >> os.getcwd()
  'C:\\Windows\\System32'
  >> os.chdir('C:\\RandomAFLocation')

  FileNotFoundError

# Absolute vs. Relative Paths
  Absolute starts from root
  Relative starts from working directory
    Show graphic/example to compare and contrast
  . (dot) for this directory
  .. (dot-dot) for parent folder

  Handling Abs/Rel path
  os.path.abspath(rel_path) - returns absolute path of arg
  >> os.path.abspath('.')

  os.path.isabs(path) - returns True if argument is an absolute path

  >> os.path.relpath('C:\\Windows', 'C:\\')
  'Windows'
  >> os.path.relpath('C:\\Windows', 'C:\\spam\eggs')
  '..\\..\\Windows'

  os.path.dirname(path) will return a string of everything that comes before
    the last slash
  os.path.basename(path) will return a string of everything that comes after
    the last slash

  >> path = 'C:\\Windows\\System32\\calc.exe'
  >> os.path.basename(path)
  'calc.exe'
  >> os.path.dirname(path)
  'C:\\Windows\\System32'

  os.path.split(path) takes a path and returns a tuple of the base + dirname

# Making new folders with os.makedirs('some dir')
# Finding File Sizes and Folder contents
  os.path.getsize(path) returns the size in bytes of the file
  os.listdir(path) returns a list of strings for each file in the path
  
